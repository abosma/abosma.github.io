{
  "version": 3,
  "sources": ["src/scripts/handlers/inputHandler.ts", "src/scripts/components/playerMovement.ts", "src/scripts/handlers/renderHandler.ts", "src/scripts/components/renderer.ts", "src/scripts/handlers/objectHandler.ts", "src/scripts/generics/vector2.ts", "src/scripts/components/transform.ts", "src/scripts/objects/gameObject.ts", "src/scripts/game.ts"],
  "sourcesContent": ["export class InputHandler {\r\n    private static instance: InputHandler;\r\n\r\n    private static pressedKeys : Array<string> = new Array<string>();\r\n\r\n    private constructor() {};\r\n\r\n    public start() : void {\r\n        document.addEventListener('keydown', (e) => {\r\n            if(e.defaultPrevented) {\r\n                return;\r\n            };\r\n\r\n            if(InputHandler.pressedKeys.indexOf(e.code) == -1) {\r\n                InputHandler.pressedKeys.push(e.code);\r\n            };\r\n        });\r\n\r\n        document.addEventListener('keyup', (e) => {\r\n            if(e.defaultPrevented) {\r\n                return;\r\n            };\r\n\r\n            let keyIndex : number = InputHandler.pressedKeys.indexOf(e.code);\r\n\r\n            if(keyIndex != -1) {\r\n                InputHandler.pressedKeys.splice(keyIndex, 1);\r\n            };\r\n        });\r\n    };\r\n\r\n    public static getInstance() : InputHandler {\r\n        if(!InputHandler.instance) {\r\n            InputHandler.instance = new InputHandler();\r\n        };\r\n\r\n        return InputHandler.instance;\r\n    };\r\n\r\n    public static keyDown(keyCode : string) : boolean {\r\n        if(this.pressedKeys.indexOf(keyCode) != -1) {\r\n            return true;\r\n        };\r\n\r\n        return false;\r\n    };\r\n}", "import { InputHandler } from \"../handlers/inputHandler\";\r\nimport { GameObject } from \"../objects/gameObject\";\r\nimport { IComponent } from \"./component\";\r\n\r\nexport class PlayerMovement implements IComponent {\r\n    public speed : number = 1;\r\n    \r\n    gameObject: GameObject;\r\n\r\n    start(): void {\r\n        return;\r\n    }\r\n\r\n    update(dt: number): void {\r\n        if(InputHandler.keyDown(\"KeyA\") || InputHandler.keyDown(\"ArrowLeft\")) {\r\n            this.gameObject.transform.position.x -= this.speed * dt;\r\n        }\r\n\r\n        if(InputHandler.keyDown(\"KeyD\") || InputHandler.keyDown(\"ArrowRight\")) {\r\n            this.gameObject.transform.position.x += this.speed * dt;\r\n        }\r\n\r\n        if(InputHandler.keyDown(\"KeyW\") || InputHandler.keyDown(\"ArrowUp\")) {\r\n            this.gameObject.transform.position.y -= this.speed * dt;\r\n        }\r\n\r\n        if(InputHandler.keyDown(\"KeyS\") || InputHandler.keyDown(\"ArrowDown\")) {\r\n            this.gameObject.transform.position.y += this.speed * dt;\r\n        }\r\n    }\r\n}", "import { Renderer } from \"../components/renderer\";\r\n\r\nexport class RenderHandler {\r\n    private renderers : Renderer[] = new Array<Renderer>();\r\n    \r\n    private offscreenCanvas : HTMLCanvasElement;\r\n    private offscreenContext : CanvasRenderingContext2D;\r\n\r\n    private displayCanvas : HTMLCanvasElement;\r\n    private displayContext : CanvasRenderingContext2D;\r\n\r\n    private static instance: RenderHandler;\r\n    \r\n    private constructor() {};\r\n\r\n    public start() : void {\r\n        this.displayCanvas = document.querySelector<HTMLCanvasElement>(\"#canvas\");\r\n        this.offscreenCanvas = document.createElement(\"canvas\");\r\n\r\n        this.offscreenCanvas.width = this.displayCanvas.width;\r\n        this.offscreenCanvas.height = this.displayCanvas.height;\r\n\r\n        this.displayContext = this.displayCanvas.getContext(\"2d\");\r\n        this.offscreenContext = this.offscreenCanvas.getContext(\"2d\");\r\n    }\r\n\r\n    public static getInstance() : RenderHandler {\r\n        if(!RenderHandler.instance) {\r\n            RenderHandler.instance = new RenderHandler();\r\n        }\r\n\r\n        return RenderHandler.instance;\r\n    }\r\n\r\n    public addRenderer(renderer : Renderer) {\r\n        if(this.renderers.indexOf(renderer) == -1) {\r\n            this.renderers.push(renderer);\r\n        }\r\n    }\r\n\r\n    public update(dt) {\r\n        this.clearScreen();\r\n\r\n        for(let i = this.renderers.length; i--;) {\r\n            let renderer : Renderer = this.renderers[i];\r\n            let rendererImage : HTMLImageElement = renderer.image;\r\n            let rendererImageWidth : number = rendererImage.width as number;\r\n            let rendererImageHeight : number = rendererImage.height as number;\r\n            let rendererPositionX : number = renderer.gameObject.transform.position.x;\r\n            let rendererPositionY : number = renderer.gameObject.transform.position.y;\r\n\r\n            this.offscreenContext.drawImage(rendererImage, rendererPositionX, rendererPositionY, rendererImageWidth, rendererImageHeight);    \r\n        }\r\n\r\n        this.displayContext.drawImage(this.offscreenCanvas, 0, 0, this.offscreenCanvas.width, this.offscreenCanvas.height);\r\n    }\r\n\r\n    private clearScreen() {\r\n        this.offscreenContext.fillRect(0, 0, this.displayCanvas.width, this.displayCanvas.height);\r\n    }\r\n}", "import { RenderHandler } from \"../handlers/renderHandler\";\r\nimport { GameObject } from \"../objects/gameObject\";\r\nimport { IComponent } from \"./component\";\r\n\r\nexport class Renderer implements IComponent {\r\n    gameObject: GameObject;\r\n    image : HTMLImageElement;\r\n\r\n    constructor(image? : HTMLImageElement) {\r\n        if(image !== undefined) {\r\n            this.image = image;\r\n        }\r\n\r\n        RenderHandler.getInstance().addRenderer(this);\r\n    }\r\n\r\n    start(): void {\r\n        return;\r\n    }\r\n\r\n    update(dt: number): void {\r\n        return;\r\n    }\r\n}", "import { GameObject } from \"../objects/gameObject\";\r\n\r\nexport class ObjectHandler {\r\n    private static instance: ObjectHandler;\r\n    private constructor() {}\r\n    \r\n    private gameObjects : GameObject[] = new Array<GameObject>();\r\n\r\n    public start() : void {\r\n        return;\r\n    }\r\n\r\n    public static getInstance() : ObjectHandler {\r\n        if(!ObjectHandler.instance) {\r\n            ObjectHandler.instance = new ObjectHandler();\r\n        }\r\n\r\n        return ObjectHandler.instance;\r\n    }\r\n\r\n    public addGameObject(gameObject : GameObject) {\r\n        if(this.gameObjects.indexOf(gameObject) == -1) {\r\n            this.gameObjects.push(gameObject);\r\n        }\r\n    }\r\n\r\n    public update(dt) {\r\n        for(let i = this.gameObjects.length; i--;) {\r\n            this.gameObjects[i].update(dt);\r\n        }\r\n    }\r\n}", "export class Vector2 {\r\n    x : number = 0.0;\r\n    y : number = 0.0;\r\n\r\n    constructor(x?, y?) {\r\n        if(x !== undefined) {\r\n            this.x = x;\r\n        }\r\n\r\n        if(y !== undefined) {\r\n            this.y = y;\r\n        }\r\n    }\r\n\r\n    public add(val) : Vector2{\r\n        if(val instanceof Vector2) {\r\n            return new Vector2(this.x + val.x, this.y + val.y);\r\n        } else {\r\n            return new Vector2(this.x + val, this.y + val);\r\n        }\r\n    }\r\n\r\n    public subtract(val) : Vector2{\r\n        if(val instanceof Vector2) {\r\n            return new Vector2(this.x - val.x, this.y - val.y);\r\n        } else {\r\n            return new Vector2(this.x - val, this.y - val);\r\n        }\r\n    }\r\n\r\n    public multiply(val) : Vector2{\r\n        if(val instanceof Vector2) {\r\n            return new Vector2(this.x * val.x, this.y * val.y);\r\n        } else {\r\n            return new Vector2(this.x * val, this.y * val);\r\n        }\r\n    }\r\n\r\n    public static addVectors(pos1 : Vector2, pos2 : Vector2) : Vector2 {\r\n        return new Vector2(pos1.x + pos2.x, pos1.y + pos2.y);\r\n    }\r\n\r\n    public static subtractVectors(pos1 : Vector2, pos2 : Vector2) : Vector2 {\r\n        return new Vector2(pos1.x - pos2.x, pos1.y - pos2.y);\r\n    }\r\n\r\n    public static multiplyVectors(pos1 : Vector2, pos2 : Vector2) : Vector2 {\r\n        return new Vector2(pos1.x * pos2.x, pos1.y * pos2.y);\r\n    }\r\n\r\n    public static distance(pos1 : Vector2, pos2: Vector2) : number {\r\n        return Vector2.len(Vector2.subtractVectors(pos1, pos2));\r\n    }\r\n\r\n    public static normalize(pos : Vector2) : Vector2 {\r\n        let length = Vector2.len(pos);\r\n        \r\n        return new Vector2(pos.x / length, pos.y / length);\r\n    }\r\n\r\n    public static len(pos : Vector2) : number {\r\n        return Math.sqrt(pos.x * pos.x + pos.y * pos.y);\r\n    }\r\n}", "import { IComponent } from \"./component\";\r\nimport { Vector2 } from \"../generics/vector2\";\r\nimport { GameObject } from \"../objects/gameObject\";\r\n\r\nexport class Transform implements IComponent {\r\n    public position : Vector2 = new Vector2();\r\n\r\n    private startPosition : Vector2;\r\n    private endPosition : Vector2;\r\n    private isMoving : boolean = false;\r\n    private distance : number;\r\n    private direction : Vector2;\r\n    private speed : number;\r\n\r\n    gameObject: GameObject;\r\n\r\n    public constructor(x?, y?, vec3?) {\r\n        if(x !== undefined) {\r\n            this.position.x = x;\r\n        }\r\n\r\n        if(y !== undefined) {\r\n            this.position.y = y;\r\n        }\r\n\r\n        if(vec3 !== undefined) {\r\n            this.position = vec3;\r\n        }\r\n    }\r\n\r\n    start(): void {\r\n        return;\r\n    }\r\n\r\n    update(dt: number): void {\r\n        if(this.isMoving) {\r\n            this.position = Vector2.addVectors(this.position, this.direction.multiply(this.speed * dt));\r\n\r\n            if(Vector2.distance(this.startPosition, this.position) >= this.distance) {\r\n                this.position = this.endPosition;\r\n                this.isMoving = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Moves object to specific given Vector2 using speed * deltaTime. Don't give it a negative speed or it will go in the other direction.\r\n     * @param pos \r\n     * @param speed \r\n     */\r\n    moveTo(pos : Vector2, speed : number) : void {\r\n        this.startPosition = this.position;\r\n        this.endPosition = pos;\r\n        this.distance = Vector2.distance(this.startPosition, pos);\r\n        this.speed = speed / 1000;\r\n        this.direction = Vector2.normalize(Vector2.subtractVectors(pos, this.startPosition));\r\n        this.isMoving = true;\r\n    }\r\n}", "import { IComponent } from \"../components/component\";\r\nimport { Transform } from \"../components/transform\";\r\nimport { ObjectHandler } from \"../handlers/objectHandler\";\r\n\r\nexport class GameObject {\r\n    public components : IComponent[] = new Array<IComponent>();\r\n    public transform : Transform;\r\n    public name : string;\r\n\r\n    constructor(name? : string) {\r\n        ObjectHandler.getInstance().addGameObject(this);\r\n\r\n        this.transform = this.addComponent(new Transform());\r\n        this.name = name || \"New GameObject\";\r\n        \r\n        this.start();\r\n    }\r\n\r\n    public start(): void {\r\n        console.log(\"Started\", this.name);\r\n    }\r\n\r\n    public update(dt : number): void {\r\n        for(let i = this.components.length; i--;) {\r\n            this.components[i].update(dt);\r\n        }\r\n    }\r\n\r\n    public addComponent<Type>(component : Type) : Type {\r\n        let newComponent : IComponent = component as unknown as IComponent;\r\n        \r\n        newComponent.gameObject = this;\r\n\r\n        if(this.components.indexOf(newComponent) == -1) {\r\n            this.components.push(newComponent);\r\n            newComponent.start();\r\n            return component;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    public getComponent<Type>(componentType : {new () : Type}) : Type {\r\n        for(let i = this.components.length; i--;) {\r\n            let component = this.components[i];\r\n\r\n            if(component instanceof componentType) {\r\n                return component;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    public removeComponent(component : IComponent) {\r\n        let index : number = -1;\r\n        \r\n        for(let i = this.components.length; i--;) {\r\n            let otherComponent = this.components[i];\r\n\r\n            if(otherComponent == component) {\r\n                index = i;\r\n            }\r\n        }\r\n\r\n        if(index != -1) {\r\n            this.components.splice(index, 1);\r\n        }\r\n\r\n        return;\r\n    }\r\n}", "import { PlayerMovement } from \"./components/playerMovement\";\r\nimport { Renderer } from \"./components/renderer\";\r\nimport { InputHandler } from \"./handlers/inputHandler\";\r\nimport { ObjectHandler } from \"./handlers/objectHandler\";\r\nimport { RenderHandler } from \"./handlers/renderHandler\";\r\nimport { GameObject } from \"./objects/gameObject\";\r\n\r\nconst objectHandler = ObjectHandler.getInstance();\r\nconst renderHandler = RenderHandler.getInstance();\r\nconst inputHandler = InputHandler.getInstance();\r\n\r\nconst dt : number = 0.01;\r\n\r\nlet currentTime : number = performance.now();\r\nlet accumulator : number = 0.0;\r\n\r\nfunction init() {\r\n    objectHandler.start();\r\n    renderHandler.start();\r\n    inputHandler.start();\r\n    \r\n    let player = new GameObject(\"Player\");\r\n    let renderer = player.addComponent(new Renderer());\r\n    let playerImage = new Image();\r\n\r\n    playerImage.src = \"src/assets/player.png\";\r\n    renderer.image = playerImage;\r\n\r\n    player.addComponent(new PlayerMovement());\r\n\r\n    window.requestAnimationFrame(update);\r\n}\r\n\r\nfunction update() {\r\n    let newTime : number = performance.now();\r\n    let frameTime : number = newTime - currentTime;\r\n\r\n    currentTime = newTime;\r\n    accumulator += frameTime;\r\n\r\n    while(accumulator >= dt) {\r\n        objectHandler.update(dt);\r\n        accumulator -= dt;\r\n    }\r\n\r\n    renderHandler.update(dt);\r\n\r\n    window.requestAnimationFrame(update);\r\n}\r\n\r\nwindow.onload = () => init();"],
  "mappings": "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",
  "names": []
}
