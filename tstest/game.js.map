{
  "version": 3,
  "sources": ["src/scripts/generics/vector2.ts", "src/scripts/handlers/renderHandler.ts", "src/scripts/components/renderer.ts", "src/scripts/components/transform.ts", "src/scripts/components/collider.ts", "src/scripts/handlers/inputHandler.ts", "src/scripts/handlers/logHandler.ts", "src/scripts/components/playerMovement.ts", "src/scripts/handlers/objectHandler.ts", "src/scripts/generics/events.ts", "src/scripts/objects/gameObject.ts", "src/scripts/handlers/mouseHandler.ts", "src/scripts/components/followMouse.ts", "src/scripts/components/dragger.ts", "src/scripts/game.ts"],
  "sourcesContent": ["export class Vector2 {\r\n    x: number = 0.0;\r\n    y: number = 0.0;\r\n\r\n    constructor(x?, y?) {\r\n        if (x !== undefined) {\r\n            this.x = x;\r\n        }\r\n\r\n        if (y !== undefined) {\r\n            this.y = y;\r\n        }\r\n    }\r\n\r\n    public add(val): Vector2 {\r\n        if (val instanceof Vector2) {\r\n            return new Vector2(this.x + val.x, this.y + val.y);\r\n        } else {\r\n            return new Vector2(this.x + val, this.y + val);\r\n        }\r\n    }\r\n\r\n    public subtract(val): Vector2 {\r\n        if (val instanceof Vector2) {\r\n            return new Vector2(this.x - val.x, this.y - val.y);\r\n        } else {\r\n            return new Vector2(this.x - val, this.y - val);\r\n        }\r\n    }\r\n\r\n    public multiply(val): Vector2 {\r\n        if (val instanceof Vector2) {\r\n            return new Vector2(this.x * val.x, this.y * val.y);\r\n        } else {\r\n            return new Vector2(this.x * val, this.y * val);\r\n        }\r\n    }\r\n\r\n    public static addVectors(pos1: Vector2, pos2: Vector2): Vector2 {\r\n        return new Vector2(pos1.x + pos2.x, pos1.y + pos2.y);\r\n    }\r\n\r\n    public static subtractVectors(pos1: Vector2, pos2: Vector2): Vector2 {\r\n        return new Vector2(pos1.x - pos2.x, pos1.y - pos2.y);\r\n    }\r\n\r\n    public static multiplyVectors(pos1: Vector2, pos2: Vector2): Vector2 {\r\n        return new Vector2(pos1.x * pos2.x, pos1.y * pos2.y);\r\n    }\r\n\r\n    public static distance(pos1: Vector2, pos2: Vector2): number {\r\n        return Vector2.len(Vector2.subtractVectors(pos1, pos2));\r\n    }\r\n\r\n    public static normalize(pos: Vector2): Vector2 {\r\n        let length = Vector2.len(pos);\r\n\r\n        return new Vector2(pos.x / length, pos.y / length);\r\n    }\r\n\r\n    public static len(pos: Vector2): number {\r\n        return Math.sqrt(pos.x * pos.x + pos.y * pos.y);\r\n    }\r\n}", "import { Renderer } from \"../components/renderer\";\r\n\r\nexport class RenderHandler {\r\n    private renderers: Renderer[] = new Array<Renderer>();\r\n    private debugText: string[] = new Array<string>();\r\n\r\n    private offscreenCanvas: HTMLCanvasElement;\r\n    private offscreenContext: CanvasRenderingContext2D;\r\n\r\n    private displayCanvas: HTMLCanvasElement;\r\n    private displayContext: CanvasRenderingContext2D;\r\n\r\n    private static instance: RenderHandler;\r\n\r\n    private constructor() { };\r\n\r\n    public start(): void {\r\n        this.displayCanvas = document.querySelector<HTMLCanvasElement>(\"#canvas\");\r\n        this.offscreenCanvas = document.createElement(\"canvas\");\r\n\r\n        this.offscreenCanvas.width = this.displayCanvas.width;\r\n        this.offscreenCanvas.height = this.displayCanvas.height;\r\n\r\n        this.displayContext = this.displayCanvas.getContext(\"2d\");\r\n        this.offscreenContext = this.offscreenCanvas.getContext(\"2d\");\r\n    }\r\n\r\n    public static getInstance(): RenderHandler {\r\n        if (!RenderHandler.instance) {\r\n            RenderHandler.instance = new RenderHandler();\r\n        }\r\n\r\n        return RenderHandler.instance;\r\n    }\r\n\r\n    public addRenderer(renderer: Renderer) {\r\n        if (this.renderers.indexOf(renderer) == -1) {\r\n            this.renderers.push(renderer);\r\n        }\r\n    }\r\n\r\n    public addDebugText(text: string[]) {\r\n        this.debugText = text.slice(-20);\r\n    }\r\n\r\n    public update(dt) {\r\n        this.clearScreen();\r\n        this.drawRenderers();\r\n        this.drawDebug();\r\n\r\n        this.displayContext.drawImage(this.offscreenCanvas, 0, 0, this.offscreenCanvas.width, this.offscreenCanvas.height);\r\n    }\r\n\r\n    private clearScreen() {\r\n        this.offscreenContext.fillRect(0, 0, this.displayCanvas.width, this.displayCanvas.height);\r\n    }\r\n\r\n    private drawRenderers() {\r\n        for (let i = this.renderers.length; i--;) {\r\n            let renderer: Renderer = this.renderers[i];\r\n            let rendererImage: HTMLImageElement = renderer.image;\r\n            let rendererImageWidth: number = rendererImage.width as number;\r\n            let rendererImageHeight: number = rendererImage.height as number;\r\n            let rendererPositionX: number = renderer.gameObject.transform.position.x;\r\n            let rendererPositionY: number = renderer.gameObject.transform.position.y;\r\n\r\n            this.offscreenContext.drawImage(rendererImage, rendererPositionX, rendererPositionY, rendererImageWidth, rendererImageHeight);\r\n        }\r\n    }\r\n\r\n    private drawDebug() {\r\n        this.offscreenContext.fillStyle = 'white';\r\n        this.offscreenContext.globalAlpha = 0.5;\r\n        this.offscreenContext.fillRect(this.displayCanvas.width * 0.8, this.displayCanvas.height * 0.03, 300, 320);\r\n\r\n        this.offscreenContext.font = 'small-caps bold 12px sans-serif';\r\n        this.offscreenContext.fillStyle = 'black';\r\n        this.offscreenContext.globalAlpha = 1;\r\n\r\n        for (let i = this.debugText.length; i--;) {\r\n            this.offscreenContext.fillText(this.debugText[i], this.displayCanvas.width * 0.81, (this.displayCanvas.height * 0.06) + 15 * i);\r\n        }   \r\n    }\r\n}", "import { RenderHandler } from \"../handlers/renderHandler\";\r\nimport { GameObject } from \"../objects/gameObject\";\r\nimport { IComponent } from \"./component\";\r\n\r\nexport class Renderer implements IComponent {\r\n    gameObject: GameObject;\r\n    image: HTMLImageElement;\r\n\r\n    constructor(image?: HTMLImageElement) {\r\n        if (image !== undefined) {\r\n            this.image = image;\r\n        }\r\n\r\n        RenderHandler.getInstance().addRenderer(this);\r\n    }\r\n\r\n    start(): void {\r\n        return;\r\n    }\r\n\r\n    update(dt: number): void {\r\n        return;\r\n    }\r\n}", "import { IComponent } from \"./component\";\r\nimport { Vector2 } from \"../generics/vector2\";\r\nimport { GameObject } from \"../objects/gameObject\";\r\nimport { Renderer } from \"./renderer\";\r\n\r\nexport class Transform implements IComponent {\r\n    public position: Vector2 = new Vector2();\r\n\r\n    public width: number;\r\n    public height: number;\r\n\r\n    private startPosition: Vector2;\r\n    private endPosition: Vector2;\r\n    private isMoving: boolean = false;\r\n    private distance: number;\r\n    private direction: Vector2;\r\n    private speed: number;\r\n\r\n    gameObject: GameObject;\r\n\r\n    public constructor(x?: number, y?: number, width?: number, height?: number, vec2?: Vector2) {\r\n        if (x !== undefined) {\r\n            this.position.x = x;\r\n        }\r\n\r\n        if (y !== undefined) {\r\n            this.position.y = y;\r\n        }\r\n\r\n        if (width !== undefined) {\r\n            this.width = width;\r\n        }\r\n\r\n        if (height !== undefined) {\r\n            this.height = height;\r\n        }\r\n\r\n        if (vec2 !== undefined) {\r\n            this.position = vec2;\r\n        }\r\n    }\r\n\r\n    start(): void {\r\n        return;\r\n    }\r\n\r\n    update(dt: number): void {\r\n        if (this.isMoving) {\r\n            this.position = Vector2.addVectors(this.position, this.direction.multiply(this.speed * dt));\r\n\r\n            if (Vector2.distance(this.startPosition, this.position) >= this.distance) {\r\n                this.position = this.endPosition;\r\n                this.isMoving = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Moves object to specific given Vector2 using speed * deltaTime. Don't give it a negative speed or it will go in the other direction.\r\n     * @param pos \r\n     * @param speed \r\n     */\r\n    moveTo(pos: Vector2, speed: number): void {\r\n        this.startPosition = this.position;\r\n        this.endPosition = pos;\r\n        this.distance = Vector2.distance(this.startPosition, pos);\r\n        this.speed = speed / 1000;\r\n        this.direction = Vector2.normalize(Vector2.subtractVectors(pos, this.startPosition));\r\n        this.isMoving = true;\r\n    }\r\n\r\n    getCenter(): Vector2 {\r\n        const renderer = this.gameObject.getComponent(Renderer);\r\n\r\n        if (!renderer) {\r\n            return;\r\n        }\r\n\r\n        const imageWidth = renderer.image.width;\r\n        const imageHeight = renderer.image.height;\r\n\r\n        return new Vector2(this.position.x + imageWidth / 2, this.position.y + imageHeight / 2);\r\n    }\r\n}", "import { GameObject } from \"../objects/gameObject\";\r\nimport { IComponent } from \"./component\";\r\nimport { Transform } from \"./transform\";\r\n\r\nexport class Collider implements IComponent {\r\n    gameObject: GameObject;\r\n    transform: Transform;\r\n\r\n    start(): void {\r\n        this.transform = this.gameObject.getComponent(Transform);\r\n    }\r\n\r\n    update(dt: number): void {\r\n        // Not needed\r\n    }\r\n}", "export class InputHandler {\r\n    private static instance: InputHandler;\r\n\r\n    private static pressedKeys: Array<string> = new Array<string>();\r\n\r\n    private constructor() { };\r\n\r\n    public static getInstance(): InputHandler {\r\n        if (!InputHandler.instance) {\r\n            InputHandler.instance = new InputHandler();\r\n        };\r\n\r\n        return InputHandler.instance;\r\n    };\r\n\r\n    public start(): void {\r\n        document.addEventListener('keydown', (e) => {\r\n            if (e.defaultPrevented) {\r\n                return;\r\n            };\r\n\r\n            if (InputHandler.pressedKeys.indexOf(e.code) == -1) {\r\n                InputHandler.pressedKeys.push(e.code);\r\n            };\r\n        });\r\n\r\n        document.addEventListener('keyup', (e) => {\r\n            if (e.defaultPrevented) {\r\n                return;\r\n            };\r\n\r\n            let keyIndex: number = InputHandler.pressedKeys.indexOf(e.code);\r\n\r\n            if (keyIndex != -1) {\r\n                InputHandler.pressedKeys.splice(keyIndex, 1);\r\n            };\r\n        });\r\n    };\r\n\r\n    public static keyDown(keyCode: string): boolean {\r\n        if (this.pressedKeys.indexOf(keyCode) != -1) {\r\n            return true;\r\n        };\r\n\r\n        return false;\r\n    };\r\n}", "import { RenderHandler } from \"./renderHandler\";\r\n\r\nexport class LogHandler {\r\n    private static instance: LogHandler;\r\n\r\n    private renderHandler: RenderHandler = RenderHandler.getInstance();\r\n    private logs: string[] = [];\r\n\r\n    private constructor() {\r\n        this.logs = [];\r\n        window.setInterval(this.printLogs, 1000);\r\n    };\r\n\r\n    public static getInstance(): LogHandler {\r\n        if (!LogHandler.instance) {\r\n            LogHandler.instance = new LogHandler();\r\n        };\r\n\r\n        return LogHandler.instance;\r\n    };\r\n\r\n    public addLog(log: string): void {\r\n        this.logs.push(log);\r\n    }\r\n\r\n    public printLogs(): void {\r\n        if (!this.logs || this.logs.length == 0) {\r\n            return;\r\n        }\r\n\r\n        this.renderHandler.addDebugText(this.logs);\r\n        this.logs = [];\r\n    }\r\n}", "import { InputHandler } from \"../handlers/inputHandler\";\r\nimport { LogHandler } from \"../handlers/logHandler\";\r\nimport { GameObject } from \"../objects/gameObject\";\r\nimport { IComponent } from \"./component\";\r\n\r\nexport class PlayerMovement implements IComponent {\r\n    public speed: number = 1;\r\n\r\n    gameObject: GameObject;\r\n    canMove: boolean = true;\r\n\r\n    start(): void {\r\n        this.gameObject.onCollision.on((other) => {\r\n            LogHandler.getInstance().addLog(`Collision with object: ${other.name}`);\r\n        });\r\n\r\n        return;\r\n    }\r\n\r\n    update(dt: number): void {\r\n        if (!this.canMove) {\r\n            return;\r\n        }\r\n\r\n        if (InputHandler.keyDown(\"KeyA\") || InputHandler.keyDown(\"ArrowLeft\")) {\r\n            this.gameObject.transform.position.x -= this.speed * dt;\r\n        }\r\n\r\n        if (InputHandler.keyDown(\"KeyD\") || InputHandler.keyDown(\"ArrowRight\")) {\r\n            this.gameObject.transform.position.x += this.speed * dt;\r\n        }\r\n\r\n        if (InputHandler.keyDown(\"KeyW\") || InputHandler.keyDown(\"ArrowUp\")) {\r\n            this.gameObject.transform.position.y -= this.speed * dt;\r\n        }\r\n\r\n        if (InputHandler.keyDown(\"KeyS\") || InputHandler.keyDown(\"ArrowDown\")) {\r\n            this.gameObject.transform.position.y += this.speed * dt;\r\n        }\r\n    }\r\n}", "import { Collider } from \"../components/collider\";\r\nimport { GameObject } from \"../objects/gameObject\";\r\n\r\nexport class ObjectHandler {\r\n    private static instance: ObjectHandler;\r\n    private constructor() { }\r\n\r\n    private gameObjects: GameObject[] = new Array<GameObject>();\r\n\r\n    public start(): void {\r\n        return;\r\n    }\r\n\r\n    public static getInstance(): ObjectHandler {\r\n        if (!ObjectHandler.instance) {\r\n            ObjectHandler.instance = new ObjectHandler();\r\n        }\r\n\r\n        return ObjectHandler.instance;\r\n    }\r\n\r\n    public addGameObject(gameObject: GameObject) {\r\n        if (this.gameObjects.indexOf(gameObject) == -1) {\r\n            this.gameObjects.push(gameObject);\r\n        }\r\n    }\r\n\r\n    public getGameObjectsWithComponent<Type>(componentType: { new(): Type }): GameObject[] {\r\n        let toReturnGameObjects: GameObject[] = [];\r\n\r\n        for (let i = this.gameObjects.length; i--;) {\r\n            if (this.gameObjects[i].hasComponent(Collider)) {\r\n                toReturnGameObjects.push(this.gameObjects[i]);\r\n            }\r\n        }\r\n\r\n        return toReturnGameObjects;\r\n    }\r\n\r\n    public update(dt) {\r\n        for (let i = this.gameObjects.length; i--;) {\r\n            this.gameObjects[i].update(dt);\r\n            this.checkCollisions();\r\n        }\r\n    }\r\n\r\n    public checkCollisions() {\r\n        let colliderObjects: GameObject[] = this.getGameObjectsWithComponent(Collider);\r\n\r\n        for (let y = colliderObjects.length; y--;) {\r\n            for (let x = colliderObjects.length - 1; x--;) {\r\n                let go1 = colliderObjects[y];\r\n                let go2 = colliderObjects[x];\r\n\r\n                if (this.aabbTest(go1, go2)) {\r\n                    go1.onCollision.emit(go2);\r\n                    go2.onCollision.emit(go1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public aabbTest(go1: GameObject, go2: GameObject) {\r\n        if (go1.transform.position.x < go2.transform.position.x + go2.transform.width &&\r\n            go1.transform.position.x + go1.transform.width > go2.transform.position.x &&\r\n            go1.transform.position.y < go2.transform.position.y + go2.transform.height &&\r\n            go1.transform.position.y + go1.transform.height > go2.transform.position.y) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n}", "// Taken from https://gist.github.com/basarat/46936dec14ad985bee24f54f3977cb2d (basarat on github)\r\n\r\nexport interface Listener<T> {\r\n    (event: T): any;\r\n}\r\n\r\nexport interface Disposable {\r\n    dispose();\r\n}\r\n\r\n/** passes through events as they happen. You will not get events from before you start listening */\r\nexport class TypedEvent<T> {\r\n    private listeners: Listener<T>[] = [];\r\n    private listenersOncer: Listener<T>[] = [];\r\n\r\n    on = (listener: Listener<T>): Disposable => {\r\n        this.listeners.push(listener);\r\n        return {\r\n            dispose: () => this.off(listener)\r\n        };\r\n    }\r\n\r\n    once = (listener: Listener<T>): void => {\r\n        this.listenersOncer.push(listener);\r\n    }\r\n\r\n    off = (listener: Listener<T>) => {\r\n        var callbackIndex = this.listeners.indexOf(listener);\r\n        if (callbackIndex > -1) this.listeners.splice(callbackIndex, 1);\r\n    }\r\n\r\n    emit = (event: T) => {\r\n        /** Update any general listeners */\r\n        this.listeners.forEach((listener) => listener(event));\r\n\r\n        /** Clear the `once` queue */\r\n        if (this.listenersOncer.length > 0) {\r\n            const toCall = this.listenersOncer;\r\n            this.listenersOncer = [];\r\n            toCall.forEach((listener) => listener(event));\r\n        }\r\n    }\r\n\r\n    pipe = (te: TypedEvent<T>): Disposable => {\r\n        return this.on((e) => te.emit(e));\r\n    }\r\n}", "import { IComponent } from \"../components/component\";\r\nimport { Transform } from \"../components/transform\";\r\nimport { TypedEvent } from \"../generics/events\";\r\nimport { LogHandler } from \"../handlers/logHandler\";\r\nimport { ObjectHandler } from \"../handlers/objectHandler\";\r\n\r\nexport class GameObject {\r\n    public components: IComponent[] = new Array<IComponent>();\r\n    public transform: Transform;\r\n    public name: string;\r\n    public onCollision: TypedEvent<GameObject> = new TypedEvent<GameObject>();\r\n\r\n    private logHandler: LogHandler = LogHandler.getInstance();\r\n\r\n    constructor(name?: string) {\r\n        ObjectHandler.getInstance().addGameObject(this);\r\n\r\n        this.transform = this.addComponent(new Transform());\r\n        this.name = name || \"New GameObject\";\r\n\r\n        this.start();\r\n    }\r\n\r\n    public start(): void {\r\n        this.logHandler.addLog(`Started ${this.name}`);\r\n    }\r\n\r\n    public update(dt: number): void {\r\n        for (let i = this.components.length; i--;) {\r\n            this.components[i].update(dt);\r\n        }\r\n    }\r\n\r\n    public addComponent<Type>(component: Type): Type {\r\n        let newComponent: IComponent = component as unknown as IComponent;\r\n\r\n        newComponent.gameObject = this;\r\n\r\n        if (this.components.indexOf(newComponent) == -1) {\r\n            this.components.push(newComponent);\r\n            newComponent.start();\r\n            return component;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    public getComponent<Type>(componentType: { new(): Type }): Type {\r\n        for (let i = this.components.length; i--;) {\r\n            let component = this.components[i];\r\n\r\n            if (component instanceof componentType) {\r\n                return component;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    public removeComponent(component: IComponent) {\r\n        let index: number = -1;\r\n\r\n        for (let i = this.components.length; i--;) {\r\n            let otherComponent = this.components[i];\r\n\r\n            if (otherComponent == component) {\r\n                index = i;\r\n            }\r\n        }\r\n\r\n        if (index != -1) {\r\n            this.components.splice(index, 1);\r\n        }\r\n\r\n        return;\r\n    }\r\n\r\n    public hasComponent<Type>(componentType: { new(): Type }): boolean {\r\n        for (let i = this.components.length; i--;) {\r\n            let component = this.components[i];\r\n\r\n            if (component instanceof componentType) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n}", "import { Vector2 } from \"../generics/vector2\";\r\nimport { LogHandler } from \"./logHandler\";\r\n\r\nexport class MouseHandler {\r\n    private static mouseX: number;\r\n    private static mouseY: number;\r\n\r\n    public static mouseDown: boolean;\r\n\r\n    private static instance: MouseHandler;\r\n\r\n    public static getInstance(): MouseHandler {\r\n        if (!MouseHandler.instance) {\r\n            MouseHandler.instance = new MouseHandler();\r\n        };\r\n\r\n        return MouseHandler.instance;\r\n    };\r\n\r\n    constructor() {\r\n        window.addEventListener('mousemove', (event: MouseEvent) => {\r\n            MouseHandler.mouseX = event.x;\r\n            MouseHandler.mouseY = event.y;\r\n        });\r\n\r\n        window.addEventListener('mousedown', () => {\r\n            MouseHandler.mouseDown = true;\r\n        });\r\n\r\n        window.addEventListener('mouseup', () => {\r\n            MouseHandler.mouseDown = false;\r\n        });\r\n    }\r\n\r\n    public static getPosition(): Vector2 {\r\n        return new Vector2(MouseHandler.mouseX, MouseHandler.mouseY);\r\n    }\r\n\r\n    public static isOverObject(position: Vector2, radius: number): boolean {\r\n        const mousePos = MouseHandler.getPosition();\r\n\r\n        return Math.pow(mousePos.x - position.x, 2) + Math.pow(mousePos.y - position.y, 2) < Math.pow(radius, 2);\r\n    }\r\n}", "import { Vector2 } from \"../generics/vector2\";\r\nimport { MouseHandler } from \"../handlers/mouseHandler\";\r\nimport { GameObject } from \"../objects/gameObject\";\r\nimport { IComponent } from \"./component\";\r\nimport { Renderer } from \"./renderer\";\r\n\r\nexport class FollowMouse implements IComponent {\r\n    gameObject: GameObject;\r\n\r\n    public shouldFollow: boolean;\r\n\r\n    private renderer: Renderer;\r\n    private image: HTMLImageElement;\r\n\r\n    start(): void {\r\n        this.renderer = this.gameObject.getComponent(Renderer);\r\n\r\n        if (this.renderer) {\r\n            this.image = this.renderer.image;\r\n        }\r\n    }\r\n\r\n    update(dt: number): void {\r\n        if (!this.shouldFollow) {\r\n            return;\r\n        }\r\n\r\n        const mousePos = MouseHandler.getPosition();\r\n\r\n        if (!this.image) {\r\n            this.gameObject.transform.position = mousePos;\r\n        } else {\r\n            this.gameObject.transform.position = new Vector2(mousePos.x - this.image.width / 2, mousePos.y - this.image.height / 2);\r\n        }\r\n    }\r\n}", "import { MouseHandler } from \"../handlers/mouseHandler\";\r\nimport { GameObject } from \"../objects/gameObject\";\r\nimport { IComponent } from \"./component\";\r\nimport { FollowMouse } from \"./followMouse\";\r\n\r\nexport class Dragger implements IComponent {\r\n    gameObject: GameObject;\r\n\r\n    private followMouse: FollowMouse;\r\n\r\n    start(): void {\r\n        this.followMouse = this.gameObject.getComponent(FollowMouse);\r\n        this.followMouse.shouldFollow = false;\r\n    }\r\n\r\n    update(dt: number): void {\r\n        if (!MouseHandler.mouseDown) {\r\n            this.followMouse.shouldFollow = false;\r\n            return;\r\n        }\r\n\r\n        if (MouseHandler.isOverObject(this.gameObject.transform.getCenter(), 50)) {\r\n            this.followMouse.shouldFollow = true;\r\n        }\r\n    }\r\n}", "import { Collider } from \"./components/collider\";\r\nimport { PlayerMovement } from \"./components/playerMovement\";\r\nimport { Renderer } from \"./components/renderer\";\r\nimport { Vector2 } from \"./generics/vector2\";\r\nimport { InputHandler } from \"./handlers/inputHandler\";\r\nimport { ObjectHandler } from \"./handlers/objectHandler\";\r\nimport { RenderHandler } from \"./handlers/renderHandler\";\r\nimport { LogHandler } from \"./handlers/logHandler\";\r\nimport { GameObject } from \"./objects/gameObject\";\r\nimport { MouseHandler } from \"./handlers/mouseHandler\";\r\nimport { FollowMouse } from \"./components/followMouse\";\r\nimport { Dragger } from \"./components/dragger\";\r\n\r\nconst objectHandler = ObjectHandler.getInstance();\r\nconst renderHandler = RenderHandler.getInstance();\r\nconst inputHandler = InputHandler.getInstance();\r\nconst logHandler = LogHandler.getInstance();\r\nconst mouseHandler = new MouseHandler();\r\n\r\nconst dt: number = 0.01;\r\n\r\nlet currentTime: number = performance.now();\r\nlet accumulator: number = 0.0;\r\n\r\nfunction init() {\r\n    objectHandler.start();\r\n    renderHandler.start();\r\n    inputHandler.start();\r\n\r\n    let player = new GameObject(\"Player\");\r\n    let renderer = player.addComponent(new Renderer());\r\n    let playerImage = new Image();\r\n\r\n    playerImage.src = \"src/assets/player.png\";\r\n    renderer.image = playerImage;\r\n    player.transform.height = 64;\r\n    player.transform.width = 64;\r\n\r\n    player.addComponent(new Collider());\r\n    player.addComponent(new PlayerMovement());\r\n    player.addComponent(new FollowMouse());\r\n    player.addComponent(new Dragger());\r\n\r\n    let wall = new GameObject(\"Wall\");\r\n    let wallRenderer = wall.addComponent(new Renderer());\r\n    let wallImage = new Image();\r\n\r\n    wallImage.src = \"src/assets/wall.png\";\r\n    wallRenderer.image = wallImage;\r\n\r\n    wall.transform.height = 64;\r\n    wall.transform.width = 64;\r\n\r\n    wall.transform.position = new Vector2(500, 500);\r\n\r\n    wall.addComponent(new Collider());\r\n\r\n    window.requestAnimationFrame(update);\r\n}\r\n\r\nfunction update() {\r\n    let newTime: number = performance.now();\r\n    let frameTime: number = newTime - currentTime;\r\n\r\n    currentTime = newTime;\r\n    accumulator += frameTime;\r\n\r\n    while (accumulator >= dt) {\r\n        objectHandler.update(dt);\r\n        accumulator -= dt;\r\n    }\r\n\r\n    renderHandler.update(dt);\r\n    logHandler.printLogs();\r\n\r\n    window.requestAnimationFrame(update);\r\n}\r\n\r\nwindow.onload = () => init();"],
  "mappings": "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",
  "names": ["Vector2", "x", "y", "val", "pos1", "pos2", "pos", "length", "RenderHandler", "renderer", "text", "dt", "i", "rendererImage", "rendererImageWidth", "rendererImageHeight", "rendererPositionX", "rendererPositionY", "Renderer", "image", "RenderHandler", "dt", "Transform", "x", "y", "width", "height", "vec2", "Vector2", "dt", "pos", "speed", "renderer", "Renderer", "imageWidth", "imageHeight", "Collider", "Transform", "dt", "_InputHandler", "keyIndex", "keyCode", "InputHandler", "LogHandler", "RenderHandler", "log", "PlayerMovement", "other", "LogHandler", "dt", "InputHandler", "ObjectHandler", "gameObject", "componentType", "toReturnGameObjects", "i", "Collider", "dt", "colliderObjects", "y", "x", "go1", "go2", "TypedEvent", "listener", "callbackIndex", "event", "toCall", "te", "e", "GameObject", "name", "TypedEvent", "LogHandler", "ObjectHandler", "Transform", "dt", "i", "component", "newComponent", "componentType", "index", "MouseHandler", "event", "Vector2", "position", "radius", "mousePos", "FollowMouse", "Renderer", "dt", "mousePos", "MouseHandler", "Vector2", "Dragger", "FollowMouse", "dt", "MouseHandler", "objectHandler", "ObjectHandler", "renderHandler", "RenderHandler", "inputHandler", "InputHandler", "logHandler", "LogHandler", "mouseHandler", "MouseHandler", "dt", "currentTime", "accumulator", "init", "player", "GameObject", "renderer", "Renderer", "playerImage", "Collider", "PlayerMovement", "FollowMouse", "Dragger", "wall", "wallRenderer", "wallImage", "Vector2", "update", "newTime", "frameTime"]
}
