{
  "version": 3,
  "sources": ["src/scripts/handlers/objectHandler.ts", "src/scripts/generics/vector2.ts", "src/scripts/components/transform.ts", "src/scripts/objects/gameObject.ts", "src/scripts/game.ts"],
  "sourcesContent": ["import { GameObject } from \"../objects/gameObject\";\r\n\r\nexport class ObjectHandler {\r\n    private static instance: ObjectHandler;\r\n    private constructor() {}\r\n    \r\n    private gameObjects : GameObject[] = new Array<GameObject>();\r\n\r\n    public static getInstance() : ObjectHandler {\r\n        if(!ObjectHandler.instance) {\r\n            ObjectHandler.instance = new ObjectHandler();\r\n        }\r\n\r\n        return ObjectHandler.instance;\r\n    }\r\n\r\n    public addGameObject(gameObject : GameObject) {\r\n        if(this.gameObjects.indexOf(gameObject) == -1) {\r\n            this.gameObjects.push(gameObject);\r\n        }\r\n    }\r\n\r\n    public update(dt) {\r\n        for(let i = this.gameObjects.length; i--;) {\r\n            this.gameObjects[i].update(dt);\r\n        }\r\n    }\r\n}", "export class Vector2 {\r\n    x : number = 0.0;\r\n    y : number = 0.0;\r\n\r\n    constructor(x?, y?) {\r\n        if(x !== undefined) {\r\n            this.x = x;\r\n        }\r\n\r\n        if(y !== undefined) {\r\n            this.y = y;\r\n        }\r\n    }\r\n}", "import { IComponent } from \"./component\";\r\nimport { Vector2 } from \"../generics/vector2\";\r\n\r\nexport class Transform implements IComponent {\r\n    public position = new Vector2();\r\n    \r\n    public constructor(x?, y?, vec3?) {\r\n        if(x !== undefined) {\r\n            this.position.x = x;\r\n        }\r\n\r\n        if(y !== undefined) {\r\n            this.position.y = y;\r\n        }\r\n\r\n        if(vec3 !== undefined) {\r\n            this.position = vec3;\r\n        }\r\n    }\r\n\r\n    start(): void {\r\n        return;\r\n    }\r\n\r\n    update(dt: number): void {\r\n        return;\r\n    }\r\n\r\n}", "import { IComponent } from \"../components/component\";\r\nimport { Transform } from \"../components/transform\";\r\nimport { ObjectHandler } from \"../handlers/objectHandler\";\r\n\r\nexport class GameObject {\r\n    public components : IComponent[] = new Array<IComponent>();\r\n    public transform : Transform;\r\n    public name : string;\r\n\r\n    constructor(name? : string) {\r\n        ObjectHandler.getInstance().addGameObject(this);\r\n\r\n        this.transform = new Transform();\r\n        this.components.push(this.transform);\r\n        this.name = name || \"New GameObject\";\r\n        \r\n        this.start();\r\n    }\r\n\r\n    public start(): void {\r\n        console.log(\"Started\", this.name);\r\n    }\r\n\r\n    public update(dt : number): void {\r\n        for(let i = this.components.length; i--;) {\r\n            this.components[i].update(dt);\r\n        }\r\n    }\r\n\r\n    public addComponent<Type>(component : Type) : Type {\r\n        let newComponent : IComponent = component as unknown as IComponent;\r\n        \r\n        if(this.components.indexOf(newComponent) == -1) {\r\n            this.components.push(newComponent);\r\n            newComponent.start();\r\n            return component;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    public getComponent<Type>(componentType : {new () : Type}) : Type {\r\n        for(let i = this.components.length; i--;) {\r\n            let component = this.components[i];\r\n\r\n            if(component instanceof componentType) {\r\n                return component;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    public removeComponent(component : IComponent) {\r\n        let index : number = -1;\r\n        \r\n        for(let i = this.components.length; i--;) {\r\n            let otherComponent = this.components[i];\r\n\r\n            if(otherComponent == component) {\r\n                index = i;\r\n            }\r\n        }\r\n\r\n        if(index != -1) {\r\n            this.components.splice(index, 1);\r\n        }\r\n\r\n        return;\r\n    }\r\n}", "import { ObjectHandler } from \"./handlers/objectHandler\";\r\nimport { GameObject } from \"./objects/gameObject\";\r\n\r\nlet oldTime : number = performance.now();\r\n\r\nfunction init() {\r\n    let player : GameObject = new GameObject(\"Player\");\r\n\r\n    console.log(player.transform.position);\r\n\r\n    window.requestAnimationFrame(update);\r\n}\r\n\r\nfunction update(time : number) {\r\n    let deltaTime = (time - oldTime) / 1000;\r\n    oldTime = time;\r\n\r\n    ObjectHandler.getInstance().update(deltaTime);\r\n\r\n    window.requestAnimationFrame(update);\r\n}\r\n\r\nwindow.onload = () => init();"],
  "mappings": "MAEO,WAAoB,CAEf,aAAc,CAEd,iBAA6B,GAAI,aAE3B,cAA8B,CACxC,MAAI,GAAc,UACd,GAAc,SAAW,GAAI,IAG1B,EAAc,SAGlB,cAAc,EAAyB,CAC1C,AAAG,KAAK,YAAY,QAAQ,IAAe,IACvC,KAAK,YAAY,KAAK,GAIvB,OAAO,EAAI,CACd,OAAQ,GAAI,KAAK,YAAY,OAAQ,KACjC,KAAK,YAAY,GAAG,OAAO,KCxBhC,WAAc,CAIjB,YAAY,EAAI,EAAI,CAHpB,OAAa,EACb,OAAa,EAGT,AAAG,IAAM,QACL,MAAK,EAAI,GAGV,IAAM,QACL,MAAK,EAAI,KCPd,WAAsC,CAGlC,YAAY,EAAI,EAAI,EAAO,CAF3B,cAAW,GAAI,GAGlB,AAAG,IAAM,QACL,MAAK,SAAS,EAAI,GAGnB,IAAM,QACL,MAAK,SAAS,EAAI,GAGnB,IAAS,QACR,MAAK,SAAW,GAIxB,OAAc,EAId,OAAO,EAAkB,ICpBtB,WAAiB,CAKpB,YAAY,EAAgB,CAJrB,gBAA4B,GAAI,OAKnC,EAAc,cAAc,cAAc,MAE1C,KAAK,UAAY,GAAI,GACrB,KAAK,WAAW,KAAK,KAAK,WAC1B,KAAK,KAAO,GAAQ,iBAEpB,KAAK,QAGF,OAAc,CACjB,QAAQ,IAAI,UAAW,KAAK,MAGzB,OAAO,EAAmB,CAC7B,OAAQ,GAAI,KAAK,WAAW,OAAQ,KAChC,KAAK,WAAW,GAAG,OAAO,GAI3B,aAAmB,EAAyB,CAC/C,GAAI,GAA4B,EAEhC,MAAG,MAAK,WAAW,QAAQ,IAAiB,GACxC,MAAK,WAAW,KAAK,GACrB,EAAa,QACN,GAGJ,KAGJ,aAAmB,EAAwC,CAC9D,OAAQ,GAAI,KAAK,WAAW,OAAQ,KAAM,CACtC,GAAI,GAAY,KAAK,WAAW,GAEhC,GAAG,YAAqB,GACpB,MAAO,GAIf,MAAO,MAGJ,gBAAgB,EAAwB,CAC3C,GAAI,GAAiB,GAErB,OAAQ,GAAI,KAAK,WAAW,OAAQ,KAGhC,AAAG,AAFkB,KAAK,WAAW,IAEhB,GACjB,GAAQ,GAIhB,AAAG,GAAS,IACR,KAAK,WAAW,OAAO,EAAO,KC9D1C,GAAI,GAAmB,YAAY,MAEnC,YAAgB,CACZ,GAAI,GAAsB,GAAI,GAAW,UAEzC,QAAQ,IAAI,EAAO,UAAU,UAE7B,OAAO,sBAAsB,GAGjC,WAAgB,EAAe,CAC3B,GAAI,GAAa,GAAO,GAAW,IACnC,EAAU,EAEV,EAAc,cAAc,OAAO,GAEnC,OAAO,sBAAsB,GAGjC,OAAO,OAAS,IAAM",
  "names": []
}
